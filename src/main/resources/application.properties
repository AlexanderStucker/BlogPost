# Allgemeine Konfiguration
quarkus.http.port=8080

# Standard Datenquelle f√ºr prod- und testprofile
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb
quarkus.datasource.jdbc.driver=org.h2.Driver
quarkus.datasource.username=sa
quarkus.datasource.password=sa

# Hibernate ORM Datenbankgeneration einstellen
quarkus.hibernate-orm.database.generation=drop-and-create

# Prod-Profil
%prod.quarkus.datasource.db-kind=h2
%prod.quarkus.datasource.jdbc.url=jdbc:h2:mem:prod
%prod.quarkus.hibernate-orm.database.generation=drop-and-create

# Test-Profil
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
%test.quarkus.hibernate-orm.database.generation=drop-and-create


# Aktivierung Swagger UI im Prod-Modus
quarkus.swagger-ui.always-include=true

# Client-ID selber festlegen (Optional)
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret

#Configuration with own KeyCloak Container
quarkus.oidc.auth-server-url=http://keycloak:8180/realms/blog
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=Cvlb4vge78765FGQmwgAPSPaFOhaYlgB

# Users und Rollenzuweisung
quarkus.keycloak.devservices.users.alex=alex
quarkus.keycloak.devservices.roles.alex=admin
quarkus.keycloak.devservices.users.alice=alice
quarkus.keycloak.devservices.roles.alice=user

# quarkus.keycloak.devservices.port=8088
# quarkus.keycloak.devservices.realm-name=blog

# Docker
quarkus.container-image.build=true
quarkus.container-image.name=my-quarkus-app
quarkus.container-image.tag=1.0.0
